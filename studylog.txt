Week 2 - JS Novice to Ninja Ch. 2

Blocks - QUESTION Any purpose or function besides defining or grouping variables/constants within a specific section?

Number - I've always found it interesting that numbers aren't separated into integers and floating point

Var - Another text I was reading said it was fine to use appropriately

variable names - Remember that $ is used by JQuery. CASE SENSITIVE
    QUESTION - Is there any effect with PHP using variables like this? I wouldn't think so, but...

Escape characters - \' \" \n \r \t(tab)

Wrapper Objects - Interesting to know. Primitives don't have properties and methods, so Wrapper

Data type methods - can access with variable['method'] or .method

String literals - `` with `Hello ${ variable }`;

Exponents - 1e6 1 million   2E3 is 2 * 10^3  operator is ** for exponentiation

Compound Assignment Operator - points +=10 = (points = points + 10)
    - ++ operator for incrementing
        - let points = 5; points++ will return 5 then increase to 6
            ++points will return 6 then return it

TYPE COERCION!!!
    - adding strings and numbers will try and convert to strings
        - '8' + 2 = '82'

False values:
            * "" // double quoted empty string literal
            * '' // single quoted empty string literal
            * `` // empty template literal
            * 0
            * -0 // considered different to 0 by JavaScript!
            * NaN
            * false
            * null
            * undefined

Negative Logical Operator - ! eg !true == false

Logical and - &&
Logical or - ||

Equality Operators - Remember == is soft and === is hard (same value and type)

-----------------Week 3--------------------


when using delete myArray[3], it will leave an 'undefined' space

destructuring arrays:

    const [x, y] = [1,2]; - x = 1 and y = 2

.length:
    length of arrays
    array[array.length -1] to find the last item (can't use array[-1] like Python?)
    mutable - array.length = 8 will create index of 8. Will delete or add undefined

Multidimensional arrays

    coordinates [0][0] - first value of first array
    coordinates [1][0] - first value of the second array

    SPREAD operator will flatten Multidimensional arrays into a single array

SETS 
    const newSet = new Set()
    sets won't add duplicate values, unless they are duplicates within their own array
    .add(value) will add
    no index in sets
    no type COERCION
    .has(value) method to check if in set
    .delete(value) to delete, .clear() to delete all values
    turn it into array by myArray = [...mySet]

MAPS
    const lsdfj = new Map()
    like python dictionaries
    different than objects because any data type can be used for key values
    .set(key, value) to add items (.set().set() for multiple)
    use .get(key) to get values
    .has(value) to check for existence in Map
    .size will return number of values
    .keys() will show all keys in a map

Ternary Operator

    shorthand for if else statement
    condition ? (code to run if condition is true): (code to run if condition is false)
    n%2 === 0 ? console.log("It's even") : console.log("it's odd")

SWITCH Operator
    switch (number) {
        case 4:
        console.log('You rolled a 4');
        break;
        case 5:
        console.log('5');
        break;
        default:
        console.log('You rolled less than 4');
        break;
    }